[{"uri":"https://sussii.github.io/k12.interncamp.2021/","title":"K12 Intern Camp","tags":[],"description":"","content":" K12 Intern Camp Welcome In the two-week camp, you will be working along with AWS GCR Solution folks to explore some interesting topics. We prepared some very challenging but exciting tasks for you. Are you ready for this intense journey?\nDeep Breath\u0026hellip;\nIf the answer is yes. Then, let\u0026rsquo;s go!\nFirst of all, here is the framework for the journey\n Learn a classic problem called Traveler Salesman Problem(TSP), which is always taught in Computer Science class. Understand how the TSP problem maps to real-world problems. Dive deep into different algorithms to solve the problem. Learn the concept of Quantum Computing Learn how to leverage Quantum Computing to solve the same problem  Each day you will be given an assignment, please follow the guide step-by-step. We know that some of the tasks are not easy for the students at your age. If you get stuck somewhere, first, discuss with your teammates. Trust us, teamwork always helps. In the case, everyone gets stuck, don\u0026rsquo;t hesitate to find your mentors. We are always behind and provide assistance.\nCheckpoint  Office Hour: From Day1 to Day9, there is 30 minutes session for Q\u0026amp;A. There is a leadership principle in Amazon: Learn and Be Curious. During the daily session, feel free to express your concerns or through questions to your mentors. Pregress Check Meeting: From Day1 to Day9, at the end of day, you will give a lille demo (PPT slids or code samples) to show your work of the day. We will have some casual conversations with you making sure that your understanding is correct and comprehensive. Final Presentation: On Day10, You will work as team to give a formal presentation to the invited reviewers and audience. Tips: Dresscode = Formal  "},{"uri":"https://sussii.github.io/k12.interncamp.2021/10_day1_assignment.html","title":"Day1: Warm UP","tags":[],"description":"","content":" Day1 Assignment Day1 is for ramping up. No hurry.\nLearning Objcetives  Get familiar with AWS Products Set up development environment for the rest of days Understand the application of TSP problem in real-world through research Onboarding to Quantum Computing  Deliver Result  1 PPT Slide: Find at least 5 real scenarios for the application of TSP 1 PPT Slide: Find at least 2 technologies for implementing quantum computing Demo: Successfully setup environment and launch the project UI in browser  Get Familiar with AWS Products First, let\u0026rsquo;s have an overview of AWS. Browse through AWS Official Webpage.\n What is Cloud Computing AWS Cloud Products  In this two weeks, you will use three AWS Products.\n Amazon WorkSpaces is used as a host to run the python project. Amazon SageMaker is used for running the given Notebooks, where you learn algorithms step-by-step. Amazon Braket is used for accessing quantum computing resources.  Setup Development Environment Step 1 : Download workspace client from https://clients.amazonworkspaces.com/.\nStep 2 : Log into Amazon WorkSpaces with the given registration code. (If you don\u0026rsquo;t have the code, ask your mentor.)\nThe examples and sample code provided in this workshop are intended to be consumed as instructional content. The crendentials is given for camp learning experience, please do not share it with others.  Step 3 : After login, you will see the desktop user interface. Now you are using a Amazon Linux system.\nStep 4 : Open a Terminal window.\nStep 5 : Execute the following commands in the Terminal to checkout project GitHub Repository and start running the project.\ngit clone https://github.com/guming3d/TSP-workshop-Original.git cd TSP-workshop-Original pip3 install -r requirements.txt python3 source/flask_app.py Step 6 : Open a web browser in the WorkSpace, visit http://127.0.0.1:5000, you should see a Web UI.\n Research about TSP Applications What Is the Traveling Salesman Problem? The traveling salesman problem (TSP) is a problem that asks, with a list of stops and the distances between each of them, what is the shortest path/possible route that visits each location and returns to the origin?\nFor decades the TSP has been a challenge for many businesses that rely on route planning.\nWith just a starting point and a few stops, planning a route can seem complicated enough.\nBut once you start planning routes throughout the country, it reaches an almost unthinkable level of complexity.\nThis is what a route would look like if planned to every city in the US with over 500 inhabitants:\nJust imagine the number of possible routes you could take when a single possible solution is this complex.\nWhy the Traveling Salesman Problem Is Still Hard to Solve in 2022 Mathematician Karl Menger discovered the TSP in 1930, over 90 years ago.\nSince then, there have been many suggested solutions and algorithms. But they often struggle with the sheer scale, since the number of possible sales routes increases exponentially with each new stop.\nAnd the truth is, real route planning in 2021 for real businesses is more complex than just a list of stops — making things even more complicated.\nIn the real world, it’s not as easy as simply finding the shortest route.\nIt’s not just about destinations and distance, there are many other factors in play It’s not as easy as just taking a list of addresses and creating a route.\nA field sales rep, delivery driver, or technician also has to consider a lot of other factors, like time windows, vehicle capacities, and more.\nDelivery time windows and planned sales meetings What if your delivery drivers or salesperson have planned delivery times or sales meetings? Then it’s not enough to just consider the distance, you also have to factor in when they should be at each location.\nThis adds a whole new level of complexity, and is a challenge that most route planners simply can’t handle.\nThis particular instance of the problem is also known as the Vehicle Routing Problem with Time Windows (VRPTW).\nRequired vehicle capacities or technician qualifications For deliveries, each package that you plan for can have specific requirements in terms of shipping and handling, from refrigeration to unloading dimensions.\nYou also have to consider the overall loading capacity of each vehicle.\nBut even for maintenance and field service businesses, you have to consider the unique qualifications of each technician, and whether they match a job.\nThis is also known as the Capacitated Vehicle Routing Problem (CVRP).\nPlanning efficient routes that include both pickups and deliveries If your business delivers any sort of reusable packaging or recyclable materials to your customers, chances are that reverse logistics are a huge priority.\nTo maximize the efficiency of your business, you want to integrate both pickup and delivery into all planned routes.\nThis adds another dimension and a level of complexity that most route optimization tools can’t handle.\nThis is also referred to as the Pick-up and Delivery Vehicle Routing Problem (PDVRP)\nConsidering priority of leads, existing clients, and deliveries To run a business efficiently and keep VIP customers satisfied, you also need to make sure your staff prioritize things the right way.\nIf your routes don’t consider priority, every customer will be treated the same. So you risk alienating loyal customers if you suddenly switch to an automated solution that can’t handle that.\nBalancing workloads between multiple drivers Of course, when planning routes for multiple drivers, you also have to consider their workloads.\nDrivers are only human, and have a maximum shift length of 14 hours and mandatory breaks.\nWhat good is an “efficient route” if it’s not possible for a driver to handle it within the allotted time?\nGood workload balancing tools will help you reduce overtime and cut driver costs, and make sure all drivers are HOS-compliant at all times.\nPlaying with the code for the simplified TSP problem Step 1 : After logging into your AWS console and click the link for Amazon Braket\nStep 2 : Next, click the button to Create Notebook\nStep 3 : Let us create a notebook instance and fill the name with k12-interncamp-tsp-quantum\nStep 4 Select Instance type. Braket notebook provides multiple instance types of different computational power and prices. The default setting is enough for most of our chapters.\nStep 5 Choose create the role for this notebook since this is the first time you use this service\nStep 6 Checkout the given GitHub Repo. A Jupyter notebook version of this book for fitting SageMaker is available at https://github.com/AoyuQC/k12-interncamp-tsp-quantum.git. We can specify this GitHub repository URL to let Braket notebook clone this repository during instance creation. After that, Please click the button to crete the notebook.\nStep 7 It may take a few minutes before the instance is ready. When it is ready, you can click on the “Open Jupyter” link.\nStep 8 Open the notebook and go to the k12-interncamp-tsp-quantum/application/tsp/Introduction_to_TSP.ipynb to learn something about TSP\nStep 9 After finishing your work, do not forget to stop the instance to avoid extra cost.\nAfter all this practice, let\u0026rsquo;s do some background research. Find at least 5 real-world problem related to TSP. You should be able to describe the use cases.\nOnboarding to Quantum Computing We will try to solve TSP problem with quantum computing(QC) resource in the second week. Today, we hope you get a basic concept of QC.\n Quantum Computers Explained in a Way Anyone Can Understand (15 minutes) Is Now the Right Time for QC? (30 minutes) When will quantum computers become reality? (1.1 hours)  For your reference (optional) Do you know the latest event about AWS?\n Checkout the 2021 Re:Invent , an annual event of AWS. 10-year Anniversary! Adam Selipsky\u0026rsquo;s Keynote (~2h)   "},{"uri":"https://sussii.github.io/k12.interncamp.2021/20_day2_assignment.html","title":"Day2: Classical Method","tags":[],"description":"","content":" Day2 Assignment Day2 is coming\nLearning Objcetives  Learn to use Amazon SageMaker to run notebooks Understand how TSP is solved with 3 different classical algorithms   Deliver Result  1 PPT Slide: Understand classical notebook for TSP（pyTSP） 1 PPT Slide: Research topic for 3-opt problem  Get Familiar with AWS Products First, let\u0026rsquo;s have an overview of AWS. Browse through AWS Official Webpage.\n What is Cloud Computing AWS Cloud Products  In this two weeks, you will use three AWS Products.\n Amazon WorkSpaces is used as a host to run the python project. Amazon SageMaker is used for running the given Notebooks, where you learn algorithms step-by-step. Amazon Braket is used for accessing quantum computing resources.  Run Notebook in Amazon SageMaker Step 1 : After logging into your AWS console and search for \u0026ldquo;SageMaker”, then click to open the Amazon SageMaker panel.\nStep 2 : Next, let us create a notebook instance.\nStep 3 Select Instance type. SageMaker provides multiple instance types of different computational power and prices. When creating an instance, we can specify the instance name and choose its type. we choose ml.c5.2xlarge. With 8-core CPU, this instance is powerful enough for most of our chapters.\nStep 4 Checkout the given GitHub Repo. A Jupyter notebook version of this book for fitting SageMaker is available at https://github.com/xiaotinghe/TSP_Classical_Method. We can specify this GitHub repository URL to let SageMaker clone this repository during instance creation.\nStep 5 It may take a few minutes before the instance is ready. When it is ready, you can click on the “Open Jupyter” link.\nStep 6 After finishing your work, do not forget to stop the instance to avoid extra cost.\nRead through the Notebooks Please read through the Notebook carefully. Make sure you run Notebook to view the result for each step.\n   No The Given Classic Alorithms     1 Permutation   2 Nearest neighbor   3 2-Opt    Quantum Computing in the Industry Let\u0026rsquo;s look the quantum technology from IBM\n The IBM Quantum State of the Union (30 minutes)  For your reference (optional) Traveling Salesman Problem Visualization \n"},{"uri":"https://sussii.github.io/k12.interncamp.2021/30_day3_assignment.html","title":"Day3: Quantum Computing Basics","tags":[],"description":"","content":" Day3 Assignment Day3 is for learning the basics of quantum computing development in the cloud\nLearning Objcetives  Build Your Own Quantum Gate Model Quantum Machine Learning in Amazon Braket  Deliver Result  1 PPT Slide: Find at least 5 real scenarios for the application of quantum computing 1 PPT Slide: Describe the progress/limitation of quantum computing 1 PPT Slide: Describe how to build a model based on quantum gates (anzats,objective function, training) Go through the notebooks in k12-interncamp-tsp-quantum/basics/gate and finish the assignment in k12-interncamp-tsp-quantum/basics/gate/pennylane/1_Build_Your_Gate.ipynb  Build Your Own Quantum Gate Model Step 1 : Open your amazon braket notebook: amazon-braket-k12-interncamp-tsp-quantum\nStep 2 : Open the k12-interncamp-tsp-quantum/basics/gate\nStep 3 : Study the notebooks under folder braket/ to learn the basics for building quantum gates\nStep 4 : Based on what you learn, please finish the task in the notebook k12-interncamp-tsp-quantum/basics/gate/pennylane/1_Build_Your_Gate.ipynb\nQuantum Machine Learning in Amazon Braket We are trying to learn building model in braket. Please watch the following videos for knowledge.\n Exploring quantum computing today with Amazon Braket (30 minutes) Pennylane Intrdocution (5 minutes) Pennylane and Amazon Braket (50 minutes)  For your reference (optional) Do you know the latest event about AWS?\n Checkout the 2021 Re:Invent , an annual event of AWS. 10-year Anniversary! Adam Selipsky\u0026rsquo;s Keynote (~2h)   "},{"uri":"https://sussii.github.io/k12.interncamp.2021/40_day4_5_assignment.html","title":"Day4-5: from MaxCut to TSP","tags":[],"description":"","content":" Day4-5 Assignment Day4-5 is for learning how to solve the same max-cut problem using annealer and gate model, and then move to solve the tsp problem using quantum annealer\nLearning Objcetives  Understand the basics of quantum annealer Solve max-cut problem using quantum gate model Solve max-cut problem using quantum annealer Move from maxcut problem to tsp problem and use quantum annealer as the solver Videos for dive deep (qaoa+dwave programming guide)  Deliver Result  1 PPT Slide: Find at least 5 scenarios for the application of max-cut 1 PPT Slide: Follow the data generation instruction, check the limitation of quantum for TSP  Understand the basics of quantum annealer - d4 Step 1 : Open your amazon braket notebook: amazon-braket-k12-interncamp-tsp-quantum\nStep 2 : Open the k12-interncamp-tsp-quantum/basics/annealer\nStep 3 : Study the notebooks Dwave_Anatomy.ipynb for the basic usage for quantum annealer\nSolve max-cut problem using quantum gate model - d4 Step 1 : Open your amazon braket notebook: amazon-braket-k12-interncamp-tsp-quantum\nStep 2 : Open the k12-interncamp-tsp-quantum/application/max_cut/gate\nStep 3 : Study the notebooks in gate/braket and gate/pennylane, compare different modeling methods\nSolve max-cut problem using quantum annealer - d4 Step 1 : Open your amazon braket notebook: amazon-braket-k12-interncamp-tsp-quantum\nStep 2 : Open the k12-interncamp-tsp-quantum/application/max_cut/annealer\nStep 3 : Study the notebook inside folder and compare the modeling methods between gate model and annealer\nMove from maxcut problem to tsp problem and use quantum annealer as the solver Step 1 : Open your amazon braket notebook: amazon-braket-k12-interncamp-tsp-quantum\nStep 2 : Open the k12-interncamp-tsp-quantum/application/tsp\nStep 3 : Study the notebook inside folder quantum/ and follow the instruction to generate cities to test the limitation for current devices\nVideos for dive deep (qaoa+dwave programming guide) We have prepared some videos for you to better understand qaoa algorithm for tsp and tutorials for quantum programming.\n QAOA: A Way to Estimate Graph Optimization (50 minutes)\n D-wave programming tutorial (2.5 hours)\n  For your reference (optional) Do you know the latest event about AWS?\n Checkout the 2021 Re:Invent , an annual event of AWS. 10-year Anniversary! Adam Selipsky\u0026rsquo;s Keynote (~2h)   "},{"uri":"https://sussii.github.io/k12.interncamp.2021/50_day6_7_assignment.html","title":"Day6-7: Project for Classical Methods","tags":[],"description":"","content":" Day5 Assignment Day5 is for ramping up. No hurry.\nLearning Objcetives  Get familiar with AWS Products Set up development environment for the rest of days Understand the application of TSP problem in real-world through research Onboarding to Quantum Computing  Deliver Result  1 PPT Slide: Find at least 5 real scenarios for the application of TSP 1 PPT Slide: Find at least 2 technologies for implementing quantum computing Demo: Successfully setup environment and launch the project UI in browser  Get Familiar with AWS Products First, let\u0026rsquo;s have an overview of AWS. Browse through AWS Official Webpage.\n What is Cloud Computing AWS Cloud Products  In this two weeks, you will use three AWS Products.\n Amazon WorkSpaces is used as a host to run the python project. Amazon SageMaker is used for running the given Notebooks, where you learn algorithms step-by-step. Amazon Braket is used for accessing quantum computing resources.  Setup Development Environment Step 1 : Download workspace client from https://clients.amazonworkspaces.com/.\nStep 2 : Log into Amazon WorkSpaces with the given registration code. (If you don\u0026rsquo;t have the code, ask your mentor.)\nThe examples and sample code provided in this workshop are intended to be consumed as instructional content. The crendentials is given for camp learning experience, please do not share it with others.  Step 3 : After login, you will see the desktop user interface. Now you are using a Amazon Linux system.\nStep 4 : Open a Terminal window.\nStep 5 : Execute the following commands in the Terminal to checkout project GitHub Repository and start running the project.\ngit clone https://github.com/guming3d/TSP-workshop-Original.git cd TSP-workshop pip3 install -r requirements.txt python3 source/flask_app.py Step 6 : Open a web browser in the WorkSpace, visit http://127.0.0.1:5000, you should see a Web UI.\nResearch about TSP Applications Let\u0026rsquo;s do some background research. Find at least 5 real-world problem related to TSP. You should be able to describe the use cases.\nOnboarding to Quantum Computing We will try to solve TSP problem with quantum computing(QC) resource in the second week. Today, we hope you get a basic concept of QC.\n What is Quantum Computing? Is Now the Right Time for QC? (30 minutes)  When will quantum computers become reality???  !!!!!!! video here\nFor your reference (optional) Do you know the latest event about AWS?\n Checkout the 2021 Re:Invent , an annual event of AWS. 10-year Anniversary! Adam Selipsky\u0026rsquo;s Keynote (~2h)   "},{"uri":"https://sussii.github.io/k12.interncamp.2021/60_day8_9_assignment.html","title":"Day8-9: Project for Quantum Method","tags":[],"description":"","content":" Day8-9 Assignment Day8-9 is for integrating the quantum computing algorithm\nLearning Objcetives  Get familiar with AWS Products Set up development environment for the rest of days Understand the application of TSP problem in real-world through research Onboarding to Quantum Computing  Deliver Result  1 PPT Slide: Find at least 5 real scenarios for the application of TSP 1 PPT Slide: Find at least 2 technologies for implementing quantum computing Demo: Successfully setup environment and launch the project UI in browser  Get Familiar with AWS Products First, let\u0026rsquo;s have an overview of AWS. Browse through AWS Official Webpage.\n What is Cloud Computing AWS Cloud Products  In this two weeks, you will use three AWS Products.\n Amazon WorkSpaces is used as a host to run the python project. Amazon SageMaker is used for running the given Notebooks, where you learn algorithms step-by-step. Amazon Braket is used for accessing quantum computing resources.  Setup Development Environment Step 1 : Download workspace client from https://clients.amazonworkspaces.com/.\nStep 2 : Log into Amazon WorkSpaces with the given registration code. (If you don\u0026rsquo;t have the code, ask your mentor.)\nThe examples and sample code provided in this workshop are intended to be consumed as instructional content. The crendentials is given for camp learning experience, please do not share it with others.  Step 3 : After login, you will see the desktop user interface. Now you are using a Amazon Linux system.\nStep 4 : Open a Terminal window.\nStep 5 : Execute the following commands in the Terminal to checkout project GitHub Repository and start running the project.\ngit clone https://github.com/guming3d/TSP-workshop-Original.git cd TSP-workshop pip3 install -r requirements.txt python3 source/flask_app.py Step 6 : Open a web browser in the WorkSpace, visit http://127.0.0.1:5000, you should see a Web UI.\nResearch about TSP Applications Let\u0026rsquo;s do some background research. Find at least 5 real-world problem related to TSP. You should be able to describe the use cases.\nOnboarding to Quantum Computing We will try to solve TSP problem with quantum computing(QC) resource in the second week. Today, we hope you get a basic concept of QC.\n What is Quantum Computing? Is Now the Right Time for QC? (30 minutes)  When will quantum computers become reality???  !!!!!!! video here\nFor your reference (optional) Do you know the latest event about AWS?\n Checkout the 2021 Re:Invent , an annual event of AWS. 10-year Anniversary! Adam Selipsky\u0026rsquo;s Keynote (~2h)   "},{"uri":"https://sussii.github.io/k12.interncamp.2021/categories.html","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://sussii.github.io/k12.interncamp.2021/tags.html","title":"Tags","tags":[],"description":"","content":""}]